{"version":3,"sources":["components/Messagess/Messagess.module.css","components/Messagess/Messagess.jsx","hoc/withAuthRedirect.js","components/Messagess/MessagessContainer.jsx"],"names":["module","exports","maxLength100","maxLengthCreator","DialogItem","props","className","h","n","name_content","to","id","name","Ms","messege_content","ms","AddMessageFormRedux","reduxForm","form","action","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Messagess","newdialogsData","dialogsData","map","item","newmessageData","messageData","reverse","message","content","values","addMessActionCreator","newMessageBody","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagess","newPostText","dispatch","Component","RedirectComponent","this","React"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,GAAK,sBAAsB,QAAU,2BAA2B,KAAO,wBAAwB,gBAAkB,qC,uICO7HC,EAAeC,YAAiB,KAEhCC,EAAa,SAACC,GAChB,OACI,qBAAKC,UAAWC,IAAEC,EAAlB,SAEA,sBAAKF,UAAWC,IAAEE,aAAlB,cAAiC,cAAC,IAAD,CAASC,GAAI,cAAgBL,EAAMM,GAAnC,SAAwCN,EAAMO,aAMjFC,EAAK,SAACR,GACZ,OACI,8BACI,qBAAKC,UAAWC,IAAEO,gBAAlB,SACKT,EAAMU,QA6DbC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAXL,SAACZ,GACpB,OAEI,uBAAMc,OAAO,GAAGC,SAAUf,EAAMgB,aAAhC,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUxB,GACjDU,KAAK,iBAAiBe,YAAY,uBACtC,8BAAK,kDAMEC,EAvDG,SAACvB,GAMnB,IAAIwB,EAAiBxB,EAAMyB,YAAYC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAKpB,KAAMD,GAAIqB,EAAKrB,QACrFsB,EAAiB5B,EAAM6B,YAAYC,UAAUJ,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAIjB,GAAIiB,EAAKI,QAASzB,GAAIqB,EAAKrB,QAgBxF,OACI,sBAAKL,UAAWC,IAAE8B,QAAlB,UACA,qBAAK/B,UAAWC,IAAEK,KAAlB,SAECiB,IAED,gCAECI,EAKD,cAACjB,EAAD,CAAqBI,SAjBJ,SAACkB,GAClBjC,EAAMkC,qBAAqBD,EAAOE,0B,uDC/CtCC,EAA6B,SAACC,GAAD,MAAW,CACxCC,OAAQD,EAAME,KAAKD,S,OCsDRE,sBAAQC,aAxBD,SAACJ,GACvB,MAAM,CACFR,YAAaQ,EAAMK,UAAUb,YAC7BJ,YAAaY,EAAMK,UAAUjB,YAC7BkB,YAAaN,EAAMK,UAAUC,gBAKR,SAACC,GAC1B,MAAM,CAIFV,qBAAsB,SAACC,GACnBS,EAASV,YAAqBC,UD1CN,SAACU,GAAc,IACrCC,EADoC,uKAGlC,OAAyB,IAAtBC,KAAK/C,MAAMsC,OAAyB,cAAC,IAAD,CAAUjC,GAAI,WAC9C,cAACwC,EAAD,eAAeE,KAAK/C,YAJO,GACVgD,IAAMH,WAStC,OADqCJ,YAAQL,EAARK,CAAoCK,KC0C9DN,CAAwEjB","file":"static/js/4.194f180b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cc\":\"Messagess_Cc__26Aru\",\"content\":\"Messagess_content__25WuX\",\"name\":\"Messagess_name__30-3V\",\"messege_content\":\"Messagess_messege_content__ew-Hw\"};","import h from './Messagess.module.css'\r\nimport { NavLink, Redirect, Route } from 'react-router-dom'\r\nimport React from 'react'\r\nimport {addMessActionCreator, onPostChengeActionCreator} from './../../redux/messageData-reducer'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { Textarea } from '../common/FormsControls/FormsControls'\r\nimport {required, maxLengthCreator} from '../../utils/validators/validators'\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\nconst DialogItem = (props) => {\r\n    return(\r\n        <div className={h.n}>\r\n        \r\n        <div className={h.name_content}> <NavLink to={'/Messagess/' + props.id}>{props.name}</NavLink></div>\r\n        \r\n      </div> \r\n        \r\n    )\r\n}\r\nconst Ms = (props) =>{\r\nreturn(\r\n    <div>\r\n        <div className={h.messege_content}>\r\n            {props.ms} \r\n        </div>\r\n    </div>\r\n)\r\n}\r\n\r\n\r\nconst Messagess = (props) =>{\r\n   \r\n    \r\n    \r\n \r\n    \r\nlet newdialogsData = props.dialogsData.map(item => <DialogItem name={item.name} id={item.id}/>);\r\nlet newmessageData = props.messageData.reverse().map(item => <Ms ms={item.message} id={item.id} />)\r\n   \r\n    // let addMess = () =>{\r\n    //     props.addMessActionCreator()\r\n    //     // props.dispatch(addMessActionCreator());\r\n        \r\n    // } \r\n    //  let onPostChenge = (props) =>{\r\n    //     // let text = newMessage.current.value;\r\n    //     // props.dispatch(onPostChengeActionCreator(text));\r\n    //     // props.onPostChengeActionCreator(text)\r\n    //  }\r\n     let addNewMessage = (values) =>{\r\n        props.addMessActionCreator(values.newMessageBody)\r\n     }\r\n    // if(props.isAuth === false) return <Redirect to={\"/Login\"}/>\r\n    return(\r\n        <div className={h.content}>\r\n        <div className={h.name}>\r\n     \r\n        {newdialogsData}\r\n        </div>\r\n        <div>\r\n        \r\n        {newmessageData}\r\n        {/* <textarea onChange={onPostChenge} name=\"\" id=\"\" cols=\"25\" rows=\"3\" ref={newMessage} value={props.newPostText} >\r\n            \r\n        </textarea>\r\n        <button onClick={addMess} >new Messages</button> */}\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n        </div>\r\n        \r\n    );\r\n    \r\n}\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        \r\n        <form action=\"\" onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required, maxLength100]}\r\n            name='newMessageBody' placeholder='Enter your massage'/>\r\n        <div><button>Send</button></div>\r\n        </form>\r\n        \r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Messagess;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Redirect} from 'react-router';\r\n\r\nlet mapStateToPropsForRedirect = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n\r\n})\r\nexport const withAuthRedirect = (Component) =>{\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(this.props.isAuth === false) return <Redirect to={\"/Login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n    \r\n    \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectedAuthRedirectComponent\r\n}","import h from './Messagess.module.css'\r\nimport { NavLink, Route } from 'react-router-dom'\r\nimport React from 'react'\r\nimport {addMessActionCreator, onPostChengeActionCreator} from '../../redux/messageData-reducer'\r\nimport Messagess from './Messagess'\r\nimport { withAuthRedirect} from '../../hoc/withAuthRedirect';\r\nimport {connect} from 'react-redux'\r\nimport { compose } from 'redux'\r\n\r\n\r\n// const MessagessContainer = (props) =>{\r\n    \r\n//    return(\r\n//         <StoreContext.Consumer>\r\n            \r\n//             { (store) => {\r\n//                 let state = store.getState();\r\n//             let addMess = () =>{\r\n//                 store.dispatch(addMessActionCreator());\r\n                    \r\n//                 } \r\n//                  let onPostChenge = (text) =>{\r\n//                  store.dispatch(onPostChengeActionCreator(text));\r\n//                  }\r\n\r\n//         return <Messagess onPostChengeActionCreator={onPostChenge} addMessActionCreator={addMess} \r\n//          dialogsData={state.messagess.dialogsData} newPostText={state.messagess.newPostText} \r\n//          messageData={state.messagess.messageData}/>;\r\n//                 }\r\n//         }\r\n//         </StoreContext.Consumer>\r\n//    )\r\n    \r\n    \r\n// }\r\nlet mapStateToPropss =(state) =>{\r\nreturn{\r\n    messageData: state.messagess.messageData,\r\n    dialogsData: state.messagess.dialogsData, \r\n    newPostText: state.messagess.newPostText,\r\n   \r\n}\r\n}\r\n\r\nlet mapDispatchToPropss =(dispatch)=>{\r\nreturn{\r\n    // onPostChengeActionCreator: (text) =>{\r\n    //     dispatch(onPostChengeActionCreator(text));\r\n    // },\r\n    addMessActionCreator: (newMessageBody) =>{\r\n        dispatch(addMessActionCreator(newMessageBody));\r\n    }\r\n}\r\n}\r\n// compose(connect(mapStateToPropss,mapDispatchToPropss),withAuthRedirect)(Messagess)\r\n// let AuthRedirectComponent = withAuthRedirect(Messagess) \r\n\r\n// const MessagessContainer = connect(mapStateToPropss,mapDispatchToPropss)(AuthRedirectComponent);\r\n// export default MessagessContainer;\r\nexport default compose(connect(mapStateToPropss,mapDispatchToPropss),withAuthRedirect)(Messagess)"],"sourceRoot":""}